<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABMCAYAAACS9rJ1AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADI2lUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS42LWMxNDAgNzkuMTYwNDUxLCAyMDE3LzA1LzA2LTAxOjA4OjIxICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgKE1hY2ludG9zaCkiIHhtcE1NOkluc3RhbmNl
        SUQ9InhtcC5paWQ6NTcwNjc1NkYzRkUyMTFFOEEyQzdCRkJFNjg3NDFBMjMiIHhtcE1NOkRvY3VtZW50
        SUQ9InhtcC5kaWQ6NTcwNjc1NzAzRkUyMTFFOEEyQzdCRkJFNjg3NDFBMjMiPiA8eG1wTU06RGVyaXZl
        ZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo1NzA2NzU2RDNGRTIxMUU4QTJDN0JGQkU2ODc0
        MUEyMyIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo1NzA2NzU2RTNGRTIxMUU4QTJDN0JGQkU2ODc0
        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
</value>
  </data>
</root>